{{- if eq .AuthMode "IntegratedOAuth"}}
# OAuth client registration for OpenShift OAuth integration
apiVersion: oauth.openshift.io/v1
kind: OAuthClient
metadata:
  name: {{.AuthProxyName}}-oauth-client
  labels:
    {{- range $key, $value := .GatewayLabels}}
    {{- if ne $key "app.kubernetes.io/component"}}
    {{$key}}: "{{$value}}"
    {{- end}}
    {{- end}}
    app.kubernetes.io/component: auth-proxy
# OAuth client configuration - fields at root level (no spec section)
grantMethod: auto

# OAuth client secret - generate a random secret for token exchange
secret: "{{.OAuthClientSecret}}"

# Redirect URIs - where OAuth server can redirect after authentication  
redirectURIs:
- "https://gateway.apps-crc.testing/oauth2/callback"
  
---
# Secret to store OAuth client credentials
apiVersion: v1
kind: Secret
metadata:
  name: {{.AuthProxyName}}-oauth
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .GatewayLabels}}
    {{- if ne $key "app.kubernetes.io/component"}}
    {{$key}}: "{{$value}}"
    {{- end}}
    {{- end}}
    app.kubernetes.io/component: auth-proxy
  annotations:
    # Link to OAuth client for automatic secret population
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"OAuthClient","name":"{{.AuthProxyName}}-oauth-client"}}'
type: Opaque
stringData:
  # OAuth client ID (automatically base64 encoded by Kubernetes)
  client-id: {{printf "%s-oauth-client" .AuthProxyName}}
  
  # OAuth client secret - must match the OAuth client secret
  client-secret: "{{.OAuthClientSecret}}"
  # OAuth issuer URL for the cluster
  issuer-url: "https://oauth-openshift.apps.{{.ClusterDomain}}"
  
  # OAuth endpoints
  authorize-url: "https://oauth-openshift.apps.{{.ClusterDomain}}/oauth/authorize"
  token-url: "https://oauth-openshift.apps.{{.ClusterDomain}}/oauth/token"
  userinfo-url: "https://oauth-openshift.apps.{{.ClusterDomain}}/oauth/userinfo"
  
---
# ServiceAccount token secret for service account authentication
apiVersion: v1
kind: Secret
metadata:
  name: {{.AuthProxyName}}-sa-token
  namespace: {{.Namespace}}
  labels:
    {{- range $key, $value := .GatewayLabels}}
    {{- if ne $key "app.kubernetes.io/component"}}
    {{$key}}: "{{$value}}"
    {{- end}}
    {{- end}}
    app.kubernetes.io/component: auth-proxy
  annotations:
    kubernetes.io/service-account.name: {{.AuthProxyName}}
type: kubernetes.io/service-account-token

{{- end}}

